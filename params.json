{"name":"advancedGrid","tagline":"A Grid-System for the LessCSS preprocessor with multiple options that other systems lack of.","body":"advancedGrid\r\n============\r\n\r\nA Grid-System for the LessCSS preprocessor with multiple options that other systems lack of.\r\n****\r\nHow to use\r\n----\r\n### 1. Setting it up\r\n1. Simply drop the grid.less file to your other less-Files.\r\n2. Import it in your less-Stylesheet that will get compiled.\r\n3. Apply the functions on your elements!\r\n\r\n### 2. Rows\r\nYou will want to choose a row when building a wrapper element that is not floated.\r\nFor Example: The container of your website should be a row since it does not require to be floated. Furthermore there is a clearfix applied on it to prevent floatet elements (likely children of the row) from unwanted behaviour. The Clearfix used is the [Micro-Clearfix by Nicolas Gallagher](http://nicolasgallagher.com/micro-clearfix-hack/).\r\n\r\nIts basic syntax is: \r\n``` css\r\n.row(usedColumns,ColumnsInTotal,totalMarginInPercent);\r\n```\r\n\r\n**Note: the margin will default to 2%, which means 1% to each side. The Columns in total will default to 12.**\r\n\r\n#### Examples:\r\n\r\nIf your container would have its id set to  \"container\" like \r\n```html \r\n<div id=\"container\"></div>\r\n```\r\nYou have to do the following in your less-File:\r\n``` css\r\n#container {\r\n\t.row(12);\r\n}\r\n```\r\n\t\r\nSince this grid consists of 12 columns per default, your container will be styled to have a width of 98% and a margin of 1% to each, left and right.\r\nIf you want the element to have other proportions you can set the other - optional - parameters.\r\n``` css \r\n#container {\r\n\t.row(3,12,0)\r\n} \r\n```\r\nThis will give the element a width of 40% an no margin.\r\n\r\n### 3. Column\r\nYou will want to use the column function when setting widths of Elements that need to be floated. For example if you want to add a Sidebar, or even two on your page.\r\n\r\nIts basic syntax is: \r\n``` css \r\n.column(usedColumns,ColumnsInTotal,floatDirection,totalMarginInPercent); \r\n``` \r\n\r\nAgain, only the first value is required. All the others are optional.\r\n\r\n**Note: the margin will default to 2%, which means 1% to each side. The Columns in total will default to 12. The floatDirection will default to left.**\r\n\r\n#### Examples:\r\n\t\t\r\n##### Basic Scenario\r\nIf you want to set up a simple two-Column page, you only need to create two elements.\r\n\r\n``` html\r\n<sidebar></sidebar>\r\n<main></main>\r\n```\r\n\r\nIn your CSS-Code you need to do the following, to have a 2-Column-Sidebar and a 10 Column Main-Content\r\n\r\n``` css\r\nsidebar {\r\n\t.column(2);\r\n}\r\nmain {\r\n\t.column(10);\r\n}\r\n```\r\n##### Advanced Scenarios\r\nIf you would like to have a Sidebar that is a quarter of your page and a Content that is three quarters of your page you would do the following in your CSS:\r\n\r\n``` css\r\nsidebar {\r\n\t.column(1,4);\r\n}\r\nmain {\r\n\t.column(3,4);\r\n}\r\n```\r\n##### Even more Advanced Scenarios\r\nIf you would like to have a Sidebar without any margin that is 2 fifths of the page and a Content that is 3 fifths of the page and floated right you would do the following:\r\n\r\n``` css\r\nsidebar {\r\n\t.column(2,5,left,0);\r\n}\r\nmain {\r\n\t.column(3,5,right);\r\n}\r\n```\t\r\n### 4. Further functions\r\n#### Push & Pull\r\nWith push and pull you can set a specific margin to either left (push) or right (pull).\r\n\r\nThe Basic Syntax is: \r\n``` css\r\n.push(columnsUsed,columnsInTotal); \r\n``` \r\n(pull works exactly the same)\r\n\r\n**Note: both parameters are optional. columnsUsed will default to one and columnsInTotal will default to 12.**\r\n\r\n##### Example\r\nIf you want an element to have a margin of 2 eighths to the left, you would do this:\r\n\r\n``` css\r\n#anyElement {\r\n\t.push(2,8);\r\n}\r\n``` \r\n#### Width\r\nIf you want - for any reason - to reset the width at a later point in your code, you can do this with the width function.\r\nYou do wonder why this is needed? Well, you dont want to rewrite everything the .column-Function sets. Furthermore, the width has to be serverd as !important when overwriting.\r\n\r\nIts Basic Syntax is: \r\n``` css\r\n.width(usedColumns,ColumnsInTotal,totalMarginInPercent);\r\n```\r\n\r\nYou might also wonder why there is a totalMargin set. This is because the margin has to be substrated from the width. And since you can set a custom margin in the column function, you have to be able to do this over here. \r\n \t\t\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}